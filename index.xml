<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Savitha Gollamudi</title><link>https://www.gsavitha.in/</link><description>Recent content in Home on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.gsavitha.in/index.xml" rel="self" type="application/rss+xml"/><item><title>React Events</title><link>https://www.gsavitha.in/notes/05-react-events/</link><pubDate>Tue, 25 Aug 2020 14:55:24 +0530</pubDate><guid>https://www.gsavitha.in/notes/05-react-events/</guid><description>React Events Review Commonly used React Events You can attach event handlers to HTML elements in React via special reserved attributes. (You can do this in vanilla JS too, though the syntax is a bit different.)
Event Attributes Any event you can listen for in JS, you can listen for in React.
Examples:
Mouse events: onClick, onMouseOver, etc Form events: onSubmit, etc Keyboard events: onKeyDown, onKeyUp, onKeyPress Full list Example: WiseSquare.</description></item><item><title>React State Patterns</title><link>https://www.gsavitha.in/notes/04-react-state-patterns/</link><pubDate>Mon, 24 Aug 2020 15:52:45 +0530</pubDate><guid>https://www.gsavitha.in/notes/04-react-state-patterns/</guid><description>Setting State Using State We know that setState() is asynchronous‚Ä¶
So: it‚Äôs risky to assume previous call has finished when you call it. Also, React will sometimes batch (squash together) calls to setState together into one for performance reasons. If a call to setState() depends on current state, the safest thing is to use the alternate ‚Äúcallback form‚Äù.
setState Callback Form this.setState(callback)
Instead of passing an object, pass it a callback with the current state as a parameter.</description></item><item><title>Intro to State</title><link>https://www.gsavitha.in/notes/03-intro-to-state/</link><pubDate>Mon, 24 Aug 2020 14:57:47 +0530</pubDate><guid>https://www.gsavitha.in/notes/03-intro-to-state/</guid><description>What is State? Thinking about state In any sufficiently advanced web application, the user interface has to be stateful.
logged-in users see a different screen than logged-out users clicking ‚Äúedit profile‚Äù opens up a modal (pop-up) window sections of a website can expand or collapse, for instance clicking ‚Äúread more‚Äù The state of the client interface (frontend) is not always directly tied to state on the server.
Why would the server need to know if a modal is open?</description></item><item><title>CRA and Modules</title><link>https://www.gsavitha.in/notes/02-cra-modules/</link><pubDate>Mon, 24 Aug 2020 13:23:51 +0530</pubDate><guid>https://www.gsavitha.in/notes/02-cra-modules/</guid><description>Create react App React is a front-end library ‚Äî you don‚Äôt need server-side stuff. You can get react.js and react-dom.js from a CDN. You can transpile JSX in the browser at runtime. But there‚Äôs a better way!
Create-React-App is a utility script that:
Creates a skeleton react project Sets it up so that JS files are run through Babel automatically. Lets us use super-modern Javascript features/idioms Makes testing &amp;amp; deployment much easier.</description></item><item><title>Intro to React</title><link>https://www.gsavitha.in/notes/01-intro-to-react/</link><pubDate>Mon, 24 Aug 2020 12:28:38 +0530</pubDate><guid>https://www.gsavitha.in/notes/01-intro-to-react/</guid><description>Popular, powerful front-end framework.
Developed by and sponsored by Facebook.
Make it easy to make reusable view components These encapsulate logic and HTML into a class Often make it easier to build modular applications Components :
The building blocks of React Pieces of UI &amp;amp; view logic Classes that know how to render themselves into HTML A bit like this&amp;hellip;
class Dog { constructor(name, color) { this.</description></item><item><title>Recursion</title><link>https://www.gsavitha.in/notes/recursion/</link><pubDate>Sun, 23 Aug 2020 17:17:32 +0530</pubDate><guid>https://www.gsavitha.in/notes/recursion/</guid><description>intro</description></item><item><title>Build your own website in 10 min! with hugo</title><link>https://www.gsavitha.in/2020/build-your-own-website-in-10-min-with-hugo/</link><pubDate>Sun, 23 Aug 2020 14:58:40 +0530</pubDate><guid>https://www.gsavitha.in/2020/build-your-own-website-in-10-min-with-hugo/</guid><description>Wait, what? Yes you read it right, you can build and host your website in 10 min üòé.
But how?
Static site generators to the rescue Ok but first, what is a static site? üòï Basically websites are of two types, static and dynamic. A static site as the name sounds it is - static, constant and fixed. It doesn&amp;rsquo;t change dynamically when a developer makes a change to a file .</description></item><item><title>Works</title><link>https://www.gsavitha.in/work/</link><pubDate>Sat, 22 Aug 2020 04:15:53 +0530</pubDate><guid>https://www.gsavitha.in/work/</guid><description>Following are some of the projects which I have done in last few years. .project-wrapper { display: grid; grid-template-columns: 1fr 1fr; column-gap: 2rem; padding: 1rem; max-width: 70rem; } .project-wrapper .card { padding: 1rem 0; border-bottom: 1px dotted lightgray; } @media (max-width: 500px) { .project-wrapper { padding: 0; grid-template-columns: 1fr; } } Maze game A classic rat and maze puzzle game. A random maze is generated every time. I have built this game to strengthen by DSA skills and also explored Canvas API and Matter.</description></item><item><title>About Me</title><link>https://www.gsavitha.in/me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.gsavitha.in/me/</guid><description>About.-- Hello. I am Savitha &amp;#128075;&amp;#127995;, a passionate web developer. I have been working with web technologies for around 4+ years with 2 years of experience in software industry &amp;#129299;. I've gotten my hands dirty in various languages and frameworks. I mostly worked on backend development, but i'm comfortable in coding frontend as well. My goal is to become a full stack engineer. I am good at JavaScript and its ecosystem &amp;#128170;&amp;#127995;.</description></item></channel></rss>