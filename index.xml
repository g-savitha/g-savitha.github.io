<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Savitha Gollamudi</title><link>https://www.gsavitha.in/</link><description>Recent content in Home on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://www.gsavitha.in/index.xml" rel="self" type="application/rss+xml"/><item><title>Machine learning 101</title><link>https://www.gsavitha.in/notes/intro-to-ml/</link><pubDate>Wed, 30 Sep 2020 18:32:58 +0530</pubDate><guid>https://www.gsavitha.in/notes/intro-to-ml/</guid><description>What is Machine learning? How do we tell a computer what a cat is. Lets say we are asked to write a code to detect if a particular picture is cat or not. How do you do that?
The goal of ML is to make machines act more and more like humans because the smarter they get, they help us achieve our goals easily
AI vs ML vs DL vs DS Artificial Intelligence: A machine intelligence that acts like a human Detecting heart disease from images Machine Learning: ML is a subset of an AI.</description></item><item><title>Event Handling</title><link>https://www.gsavitha.in/notes/events/</link><pubDate>Sat, 26 Sep 2020 15:18:15 +0530</pubDate><guid>https://www.gsavitha.in/notes/events/</guid><description>Intro to DOM Events Events - Responding to user inputs and actions
Types of events:(some of the many)
clicks, drags, drops, hovers,scrolls, form submissions, key press, focus/blur mousewheel, double click, copying, pasting, audio start, screen resize, printing etc. Note: All events follow a similar pattern
Pattern:
The thing Event type Code to run button click change the color input hits return get the search results image mouseover display img caption for more info visit MDN Event reference</description></item><item><title>Manipulating the DOM</title><link>https://www.gsavitha.in/notes/dom-manipulation-02/</link><pubDate>Sat, 26 Sep 2020 13:03:28 +0530</pubDate><guid>https://www.gsavitha.in/notes/dom-manipulation-02/</guid><description>Properties and Methods of DOM Lets look at some of the important properties and methods which we use regularly
innerText &amp;amp; textContent innerText innerText gives the data in between the tags 1const h1 = document.querySelector(&amp;#34;h1&amp;#34;); 2h1.innerText; //My Web page 3const ul = document.querySelector(&amp;#34;ul&amp;#34;); 4ul.innerText; //&amp;#34;First2nd3rd&amp;#34; All the nested content is concatenated and output came as one object 5document.body.innerText; // we get all the text on the webpage, it doesnt matter it is nested or not 6//change the value 7h1.</description></item><item><title>Intro to DOM Manipulation</title><link>https://www.gsavitha.in/notes/dom-manipulation/</link><pubDate>Sat, 26 Sep 2020 12:27:19 +0530</pubDate><guid>https://www.gsavitha.in/notes/dom-manipulation/</guid><description>Introduction DOM is a JS representation of a webpage. (JS window object on to the webpage). In brief, its a branch of objects (Browser turns out webpage into bunch of objects.)that you can interact with, via JS.
Note : Content inside the tags is the property of object Document Object DOM is a representation of a document object made with a bunch of objects &amp;amp; they are assembled into a tree.</description></item><item><title>Intro to Node - 2</title><link>https://www.gsavitha.in/notes/ch-02-node-intro-2/</link><pubDate>Tue, 22 Sep 2020 19:00:37 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-02-node-intro-2/</guid><description>Creating a Web server http module Gives us networking capability -&amp;gt; such as building a http server. 1const http = require(&amp;#34;http&amp;#34;); http requires a cb fn which gets fired off whenever a new request comes
CB gets access to 2 very imp variables (req and res)
Create a server
start the server -&amp;gt; by listening on incoming reqs
Create a server:</description></item><item><title>Intro to Node</title><link>https://www.gsavitha.in/notes/ch-01-node-intro/</link><pubDate>Tue, 22 Sep 2020 16:09:53 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-01-node-intro/</guid><description>What is Node and why to use it? What is Node? Node.js is a JS runtime built on top of Google&amp;rsquo;s opensource V8 Js Engine. Node helps us to run JS outside the browser. It acts like a container to run JS code. V8 engine executes the JS code.
Why Node? With help of Node, we can use JS on server-side of web development. We can build fast, highly scalable applications.</description></item><item><title>Hosting react projects on GH Pages</title><link>https://www.gsavitha.in/2020/hosting-react-projects-on-gh-pages/</link><pubDate>Fri, 11 Sep 2020 12:31:59 +0530</pubDate><guid>https://www.gsavitha.in/2020/hosting-react-projects-on-gh-pages/</guid><description>Want to host a react website? You cant afford paying bills for each and every project?
Well, Don&amp;rsquo;t worry now you can do that for free with the help of Github Pages. Using GH Pages you can host any website for free in a secured way.
When you host any static website or blog on github servers, basically your domain name would be in this format: {username}.github.io/{repo-name}, if you wish to host it on your own domain, no problem you can do that as well.</description></item><item><title>Syncing Git Fork with Original Repository</title><link>https://www.gsavitha.in/2020/syncing-git-fork-with-original-repository/</link><pubDate>Fri, 11 Sep 2020 11:30:29 +0530</pubDate><guid>https://www.gsavitha.in/2020/syncing-git-fork-with-original-repository/</guid><description>TL;DR üöÄ These are the only commands you need to sync your forked repo with the original repo
1git remote add upstream https://github.com/&amp;lt;Original Owner Username&amp;gt;/&amp;lt;Original Repository&amp;gt;.git 2git fetch upstream 3git checkout master 4git merge upstream/master 5git push Why should I do this? üòè Before submitting any pull request, syncing your forked repository with original repository is an important step to perform, as you may want to get the bug fixes or additional features to merge with your code since the time you forked the original repo.</description></item><item><title>GCD</title><link>https://www.gsavitha.in/notes/ch-03-gcd/</link><pubDate>Wed, 02 Sep 2020 16:05:07 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-03-gcd/</guid><description>LCM and HCF Factors and multiples: All numbers that divide a number completely, i.e., without leaving any remainder, are called factors of that number. For example, 24 is completely divisible by 1, 2, 3, 4, 6, 8, 12, 24. Each of these numbers is called a factor of 24 and 24 is called a multiple of each of these numbers. HCF or GCD : The largest number that divides two or more numbers is the highest common factor (HCF) for those numbers.</description></item><item><title>Prime Numbers</title><link>https://www.gsavitha.in/notes/ch-02-prime-num/</link><pubDate>Wed, 02 Sep 2020 16:04:56 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-02-prime-num/</guid><description>Numbers &amp;gt; 0 which are divisible by 1 and itself. Example: 2,3,5,7,11..
Facts about prime numbers: Every prime number can be represented in form of (6n+1) and (6n-1) except 2 and 3, when n &amp;gt; 0. 5 : (6 * 1 ) -1, 29: (6 * 5) - 1 2 and 3 are only two consecutive natural numbers, which are prime too. 1 is neither prime nor composite.</description></item><item><title>Basic Math</title><link>https://www.gsavitha.in/notes/ch-01-basic-math/</link><pubDate>Wed, 02 Sep 2020 16:04:36 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-01-basic-math/</guid><description>Progressions Arithmetic Progression : A sequence of numbers is said to be in an Arithmetic progression if the difference between any two consecutive terms is always the same. 2, 4, 6, 8, 10 is an AP series because they have a common difference (4-2=6-4=8-6=10-8)
Few facts about AP Initial Term (a): first number in the series Common difference (d): The value by which consecutive terms increase or decrease The behavior of the AP depends on the common difference d.</description></item><item><title>React State Patterns</title><link>https://www.gsavitha.in/2020/react-state-patterns/</link><pubDate>Tue, 01 Sep 2020 16:27:52 +0530</pubDate><guid>https://www.gsavitha.in/2020/react-state-patterns/</guid><description>Setting State Using State We know that setState() is asynchronous‚Ä¶
So: it‚Äôs risky to assume previous call has finished when you call it. Also, React will sometimes batch (squash together) calls to setState together into one for performance reasons. If a call to setState() depends on current state, the safest thing is to use the alternate ‚Äúcallback form‚Äù.
setState Callback Form this.setState(callback)
Instead of passing an object, pass it a callback with the current state as a parameter.</description></item><item><title>Recursion</title><link>https://www.gsavitha.in/notes/recursion/</link><pubDate>Sun, 23 Aug 2020 17:17:32 +0530</pubDate><guid>https://www.gsavitha.in/notes/recursion/</guid><description>Intro to recursion What is recursion?
Recursion : A function calling itself directly or indirectly.
Directly:
1void fun1(){ 2 //somecode ... 3 fun1(); 4 //some other code... 5} Indirectly: Not a very common approach (Mostly direct recursive approach is used)
fun1() -&amp;gt; fun2() -&amp;gt; fun1()
1void fun1(){ 2 //somecode ... 3 fun2(); 4 //some other code... 5} 6void fun2(){ 7 //somecode ... 8 fun1(); 9 //some other code... 10} 11 12 If you dont add a base case, recursion never stops and we might end up with stackoverflow(in case of java) or segmentation fault error(in case of cpp).</description></item><item><title>Build your own website in 10 min! with hugo</title><link>https://www.gsavitha.in/2020/build-your-own-website-in-10-min-with-hugo/</link><pubDate>Sun, 23 Aug 2020 14:58:40 +0530</pubDate><guid>https://www.gsavitha.in/2020/build-your-own-website-in-10-min-with-hugo/</guid><description>Wait, what? Yes you read it right, you can build and host your website in 10 min üòé.
But how?
Static site generators to the rescue Ok but first, what is a static site? üòï Basically websites are of two types, static and dynamic. A static site as the name sounds it is - static, constant and fixed. It doesn&amp;rsquo;t change dynamically when a developer makes a change to a file .</description></item><item><title>Works</title><link>https://www.gsavitha.in/work/</link><pubDate>Sat, 22 Aug 2020 04:15:53 +0530</pubDate><guid>https://www.gsavitha.in/work/</guid><description>Following are some of the projects which I have done in last few years. .project-wrapper { display: grid; grid-template-columns: 1fr 1fr; column-gap: 2rem; padding: 1rem; max-width: 70rem; } .project-wrapper .card { padding: 1rem 0; border-bottom: 1px dotted lightgray; } @media (max-width: 500px) { .project-wrapper { padding: 0; grid-template-columns: 1fr; } } Node Manager A package manger and also dynamic code deployment engine for code in production. This understand the complete node file system and tracks the file modifications with the help of Chokidar.</description></item><item><title>About Me</title><link>https://www.gsavitha.in/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.gsavitha.in/about/</guid><description>About.-- Hello world &amp;#128075;&amp;#127995;, Savitha here. A passionate Full stack web developer. I have been working with web technologies for around 4+ years with 2 years of experience in software industry. I've gotten my hands dirty in various languages and frameworks. I am good at JavaScript and its ecosystem. I am well-versed in coding back-end with Node.js and Java. For database I prefer to use MongoDB, but I am educated in SQL as well.</description></item></channel></rss>