<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>recursion on Savitha Gollamudi</title><link>https://www.gsavitha.in/categories/recursion/</link><description>Recent content in recursion on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Aug 2020 17:17:32 +0530</lastBuildDate><atom:link href="https://www.gsavitha.in/categories/recursion/index.xml" rel="self" type="application/rss+xml"/><item><title>Recursion</title><link>https://www.gsavitha.in/notes/recursion/</link><pubDate>Sun, 23 Aug 2020 17:17:32 +0530</pubDate><guid>https://www.gsavitha.in/notes/recursion/</guid><description>Intro to recursion What is recursion?
Recursion : A function calling itself directly or indirectly.
Directly:
void fun1(){ //somecode ... fun1(); //some other code... } Indirectly: Not a very common approach (Mostly direct recursive approach is used)
void fun1(){ //somecode ... fun2(); //some other code... } void fun2(){ //somecode ... fun1(); //some other code... } If you dont add a base case, recursion never stops and we might end up with stackoverflow(in case of java) or segmentation fault error(in case of cpp).</description></item></channel></rss>