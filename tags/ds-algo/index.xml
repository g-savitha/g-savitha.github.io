<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ds-algo on Savitha Gollamudi</title><link>https://www.gsavitha.in/tags/ds-algo/</link><description>Recent content in ds-algo on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Aug 2020 21:53:06 +0530</lastBuildDate><atom:link href="https://www.gsavitha.in/tags/ds-algo/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Math required for problem solving</title><link>https://www.gsavitha.in/notes/math/</link><pubDate>Sun, 23 Aug 2020 21:53:06 +0530</pubDate><guid>https://www.gsavitha.in/notes/math/</guid><description>Find number of digits in a number Given an integral number N. The task is to find the count of digits present in this number. Lets say n = 2020, number of digits in 2020 = 4 and digits are 2,0,2,0
A simple solution is..
Check if number n != 0 increment count of digits by 1 if n !=0 reduce number by dividing it with 10 repeat above steps, until n is reduced to 0 //iterative int countDigits(long n){ int count = 0; while(n &amp;gt; 0){ n = n/10; ++count; } return count; } // TC: O(digitsCount), SC: O(1) //recursive int countDigits(long n){ if(n==0) return 1; return 1+ countDigits(n/10); } // TC: O(digitsCount), SC: O(digitsCount) Another approach :</description></item><item><title>Recursion</title><link>https://www.gsavitha.in/notes/recursion/</link><pubDate>Sun, 23 Aug 2020 17:17:32 +0530</pubDate><guid>https://www.gsavitha.in/notes/recursion/</guid><description>Intro to recursion What is recursion?
Recursion : A function calling itself directly or indirectly.
Directly:
void fun1(){ //somecode ... fun1(); //some other code... } Indirectly: Not a very common approach (Mostly direct recursive approach is used)
void fun1(){ //somecode ... fun2(); //some other code... } void fun2(){ //somecode ... fun1(); //some other code... } If you dont add a base case, recursion never stops and we might end up with stackoverflow(in case of java) or segmentation fault error(in case of cpp).</description></item></channel></rss>