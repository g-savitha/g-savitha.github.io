<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>es6 on Savitha Gollamudi</title><link>https://www.gsavitha.in/tags/es6/</link><description>Recent content in es6 on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 26 Sep 2020 15:18:15 +0530</lastBuildDate><atom:link href="https://www.gsavitha.in/tags/es6/index.xml" rel="self" type="application/rss+xml"/><item><title>Event Handling</title><link>https://www.gsavitha.in/notes/events/</link><pubDate>Sat, 26 Sep 2020 15:18:15 +0530</pubDate><guid>https://www.gsavitha.in/notes/events/</guid><description>Intro to DOM Events Events - Responding to user inputs and actions
Types of events:(some of the many)
clicks, drags, drops, hovers,scrolls, form submissions, key press, focus/blur mousewheel, double click, copying, pasting, audio start, screen resize, printing etc. Note: All events follow a similar pattern
Pattern:
The thing Event type Code to run button click change the color input hits return get the search results image mouseover display img caption for more info visit MDN Event reference</description></item><item><title>Manipulating the DOM</title><link>https://www.gsavitha.in/notes/dom-manipulation-02/</link><pubDate>Sat, 26 Sep 2020 13:03:28 +0530</pubDate><guid>https://www.gsavitha.in/notes/dom-manipulation-02/</guid><description>Properties and Methods of DOM Lets look at some of the important properties and methods which we use regularly
innerText &amp;amp; textContent innerText innerText gives the data in between the tags 1const h1 = document.querySelector(&amp;#34;h1&amp;#34;); 2h1.innerText; //My Web page 3const ul = document.querySelector(&amp;#34;ul&amp;#34;); 4ul.innerText; //&amp;#34;First2nd3rd&amp;#34; All the nested content is concatenated and output came as one object 5document.body.innerText; // we get all the text on the webpage, it doesnt matter it is nested or not 6//change the value 7h1.</description></item><item><title>Intro to DOM Manipulation</title><link>https://www.gsavitha.in/notes/dom-manipulation/</link><pubDate>Sat, 26 Sep 2020 12:27:19 +0530</pubDate><guid>https://www.gsavitha.in/notes/dom-manipulation/</guid><description>Introduction DOM is a JS representation of a webpage. (JS window object on to the webpage). In brief, its a branch of objects (Browser turns out webpage into bunch of objects.)that you can interact with, via JS.
Note : Content inside the tags is the property of object Document Object DOM is a representation of a document object made with a bunch of objects &amp;amp; they are assembled into a tree.</description></item><item><title>Intro to Node - 2</title><link>https://www.gsavitha.in/notes/ch-02-node-intro-2/</link><pubDate>Tue, 22 Sep 2020 19:00:37 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-02-node-intro-2/</guid><description>Creating a Web server http module Gives us networking capability -&amp;gt; such as building a http server. 1const http = require(&amp;#34;http&amp;#34;); http requires a cb fn which gets fired off whenever a new request comes
CB gets access to 2 very imp variables (req and res)
Create a server
start the server -&amp;gt; by listening on incoming reqs
Create a server:</description></item><item><title>Intro to Node</title><link>https://www.gsavitha.in/notes/ch-01-node-intro/</link><pubDate>Tue, 22 Sep 2020 16:09:53 +0530</pubDate><guid>https://www.gsavitha.in/notes/ch-01-node-intro/</guid><description>What is Node and why to use it? What is Node? Node.js is a JS runtime built on top of Google&amp;rsquo;s opensource V8 Js Engine. Node helps us to run JS outside the browser. It acts like a container to run JS code. V8 engine executes the JS code.
Why Node? With help of Node, we can use JS on server-side of web development. We can build fast, highly scalable applications.</description></item></channel></rss>