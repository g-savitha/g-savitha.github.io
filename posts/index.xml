<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Savitha Gollamudi</title><link>https://www.gsavitha.in/posts/</link><description>Recent content in Posts on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Aug 2020 14:58:40 +0530</lastBuildDate><atom:link href="https://www.gsavitha.in/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Build Your Own Site in 10 min! with hugo</title><link>https://www.gsavitha.in/2020/build-your-own-site-in-10-min-with-hugo/</link><pubDate>Sun, 23 Aug 2020 14:58:40 +0530</pubDate><guid>https://www.gsavitha.in/2020/build-your-own-site-in-10-min-with-hugo/</guid><description>Yes you read it right, you can build and host your website in 10 min ðŸ˜¯.
How?
Static site generators to the rescue Ok, but what is a static site? ðŸ˜• Basically websites are of two types, static and dynamic. A static site as the name sounds it is - static, constant and fixed. It doesn&amp;rsquo;t change dynamically when a developer makes a change to a file . They just create the static content(HTML and CSS) and upload them on to the server where it remains unchanged.</description></item><item><title>Js Resources</title><link>https://www.gsavitha.in/2020/js-resources/</link><pubDate>Sat, 22 Aug 2020 23:11:21 +0530</pubDate><guid>https://www.gsavitha.in/2020/js-resources/</guid><description>Top javascript resources</description></item><item><title>Slice Type in Rust</title><link>https://www.gsavitha.in/2020/slice-type-in-rust/</link><pubDate>Tue, 30 Jun 2020 12:26:32 +0530</pubDate><guid>https://www.gsavitha.in/2020/slice-type-in-rust/</guid><description>In Rust, there is a concept of borrowing and taking ownership. This is a concept not many languages implement.
Ownership and Borrowing In a Rust program, any given value is owned by a variable. For instance, if we declare let a = 30;, value 30 would be owned by variable a.
Following is a program to illustrate it:
// won&amp;#39;t compile fn main(){letsome_string=String::from(&amp;#34;hello world&amp;#34;);println!(&amp;#34;Length {}&amp;#34;,str_length(some_string));println!(&amp;#34;string is &amp;#39;{}&amp;#39;&amp;#34;,some_string);}fn str_length(s: String)-&amp;gt; usize {s.</description></item></channel></rss>