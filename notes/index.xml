<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Savitha Gollamudi</title><link>g-savitha.github.io/notes/</link><description>Recent content in Notes on Savitha Gollamudi</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 31 Jul 2020 21:42:44 +0530</lastBuildDate><atom:link href="g-savitha.github.io/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Analysis of Algorithms</title><link>g-savitha.github.io/notes/analysis-of-algorithms/</link><pubDate>Fri, 31 Jul 2020 21:42:44 +0530</pubDate><guid>g-savitha.github.io/notes/analysis-of-algorithms/</guid><description>why performance analysis? because it is important for a software to scale
Asymptotic Analysis Geeks For Geeks</description></item><item><title>Today I Learned (General)</title><link>g-savitha.github.io/notes/today-i-learned-general/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>g-savitha.github.io/notes/today-i-learned-general/</guid><description>16 June, 2020 Seppuku A Japanese ritual performed by high command when they loose a battle where there were most likely to win. The person who is supposed to perform this ritual, would kill himself with a dagger by cutting a part of abdomen horizentally so that some of the organ comes out of his belly. This is also known as Harakiri(belly cutting).
Initially this was reserved for Samurai, but adopted by other people when time passed on.</description></item><item><title>Today I Learned (Tech)</title><link>g-savitha.github.io/notes/today-i-learned-tech/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>g-savitha.github.io/notes/today-i-learned-tech/</guid><description>17 June, 2020 ES6: Private method using Symbol() Symbol in JavaScript(ES6) is a data type. The speciality about Symbols are that the value is unique. Using this feature, one could abstract methods of ES6 class. Here&amp;rsquo;s an example:
(() =&amp;gt; { const FORMAT_MSG = Symbol(); class SayHello { constructor(name) { this[FORMAT_MSG](name); } [FORMAT_MSG](name) { this.message = `Hello, ${name}` } done() { alert(this.message); } } window.SayHello = SayHello; // make it available to global scope })() credit: Rajesh Pillai</description></item></channel></rss>